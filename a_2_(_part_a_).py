# -*- coding: utf-8 -*-
"""A.2 ( Part A )

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OYKIdntF4jM7cHQrTjOchjWb9Q-axssv
"""

class TreeNode:
    def __init__(self, key, post_content, author):
        self.left = None
        self.right = None
        self.key = key
        self.post_content = post_content
        self.author = author

class BinarySearchTree:
    def __init__(self):
        self.root = None

    def insert(self, key, post_content, author):
        if not self.root:
            self.root = TreeNode(key, post_content, author)
        else:
            self._insert(self.root, key, post_content, author)

    def _insert(self, node, key, post_content, author):
        if key < node.key:
            if node.left is None:
                node.left = TreeNode(key, post_content, author)
            else:
                self._insert(node.left, key, post_content, author)
        else:
            if node.right is None:
                node.right = TreeNode(key, post_content, author)
            else:
                self._insert(node.right, key, post_content, author)

    def find_range(self, start_key, end_key):
        # Find and return all posts within the range
        return self._find_range(self.root, start_key, end_key, [])

    def _find_range(self, node, start_key, end_key, found_posts):
        if node:
            if start_key <= node.key <= end_key:
                found_posts.append((node.key, node.post_content, node.author))
                self._find_range(node.left, start_key, end_key, found_posts)
                self._find_range(node.right, start_key, end_key, found_posts)
            elif node.key < start_key:
                self._find_range(node.right, start_key, end_key, found_posts)
            elif node.key > end_key:
                self._find_range(node.left, start_key, end_key, found_posts)
        return found_posts

# Example Usage
bst = BinarySearchTree()
bst.insert("2004-08-03T01:01:01", "Khalifa's birthday!", "Ahmed")
bst.insert("1987-06-24T10:30:19", "Messi's birthday!", "Jorge")
bst.insert("2024-04-16T15:00:00", "Is this afternoon in Dubai???", "Drew")

# Query for posts on a specific date
posts = bst.find_range("1987-06-24T10:30:19", "2024-04-19T23:59:59")
for post in posts:
    print(f"DateTime: {post[0]}, Content: {post[1]}, Author: {post[2]}")

# Query for posts on a specific date
posts = bst.find_range("2003-06-24T10:30:19", "2024-04-19T23:59:59")
for post in posts:
    print(f"DateTime: {post[0]}, Content: {post[1]}, Author: {post[2]}")

# Query for posts on a specific date
posts = bst.find_range("1990-06-24T10:30:19", "2005-04-19T23:59:59")
for post in posts:
    print(f"DateTime: {post[0]}, Content: {post[1]}, Author: {post[2]}")